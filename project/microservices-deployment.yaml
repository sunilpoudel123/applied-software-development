---
# Auth Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: microservices
  labels:
    app: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: auth-service
          image: auth-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8084
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql-db:3306/auth_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            - name: SPRING_DATASOURCE_USERNAME
              value: "walletuser"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "walletpass"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8084
            initialDelaySeconds: 45
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8084
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z mysql-db 3306; do echo waiting for mysql; sleep 2; done']

---
# Auth Service
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: microservices
spec:
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 8084
      targetPort: 8084
  type: ClusterIP

---
# Wallet Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wallet-service
  namespace: microservices
  labels:
    app: wallet-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wallet-service
  template:
    metadata:
      labels:
        app: wallet-service
    spec:
      containers:
        - name: wallet-service
          image: wallet-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql-db:3306/wallet_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            - name: SPRING_DATASOURCE_USERNAME
              value: "walletuser"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "walletpass"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 45
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z mysql-db 3306; do echo waiting for mysql; sleep 2; done']

---
# Wallet Service
apiVersion: v1
kind: Service
metadata:
  name: wallet-service
  namespace: microservices
spec:
  selector:
    app: wallet-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  type: ClusterIP

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: microservices
  labels:
    app: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: api-gateway:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      initContainers:
        - name: wait-for-services
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z auth-service 8084 && nc -z wallet-service 8081; do echo waiting for services; sleep 2; done']

---
# API Gateway Service (LoadBalancer to expose externally)
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: microservices
spec:
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer